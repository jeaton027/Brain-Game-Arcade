,
	{
		"image": "./assets/carnival/tent.png",
		"name": "tent"
	}




.js one col of imgs

let rows = 3;
let columns = 4;

function createTiles(images) {
    const gameBoard = document.getElementById('game-board');
    gameBoard.innerHTML = ''; // Clear existing tiles

    images.forEach((item, index) => {
        const tile = document.createElement('div');
        tile.className = 'tile card'; // Mark the tile as a 'card' for flipping logic
        tile.setAttribute('data-name', item.name);

        // Card front (visible by default)
        const front = document.createElement('div');
        front.className = 'front';
        front.innerHTML = `<img src="${item.image}" alt="${item.name}" class="front-image">`;

        // Card back (hidden initially)
        const back = document.createElement('div');
        back.className = 'back';

        // Append front and back to tile
        tile.appendChild(front);
        tile.appendChild(back);

        // Event listener for flipping the card
        tile.addEventListener('click', () => flipCard(tile));

        // Append tile to game board
        gameBoard.appendChild(tile);
    });
}

function flipCard(tile) {
    tile.classList.toggle('flipped'); // Toggle flip on click
	console.log("Tile clicked:");
}

function changeTheme(theme) {
	console.log(theme);
	var filepath = `assets/${theme}/cards.json`;
	console.log(filepath);
	fetch(filepath)  // Adjust the path as necessary
		.then(response => response.json())
		.then(images => {
			createTiles(images);
		})
		.catch(error => console.error('Failed to load theme images:', error));
}

// function flipCard(index) {
// 	console.log("Tile clicked:", index);
// 	// Add game logic here, such as checking for matches
// }

// DOMContentLoaded listener
document.addEventListener("DOMContentLoaded", () => {
	// Initialize the game with a default theme
	changeTheme('carnival');

	// Setup theme buttons to change themes
	document.querySelector('.theme-selection button:nth-child(1)').onclick = () => changeTheme('animals');
	document.querySelector('.theme-selection button:nth-child(2)').onclick = () => changeTheme('carnival');
	document.querySelector('.theme-selection button:nth-child(3)').onclick = () => changeTheme('colors');
});







**************************************

let rows = 3;
let columns = 4;

document.addEventListener("DOMContentLoaded", () => {
	const gameBoard = document.querySelector(".game-board");
	const movesCounter = document.querySelector(".moves");
	let moves = 0;
	movesCounter.textContent = moves;

	function createGrid(m, n) {
		gameBoard.style.gridTemplateRows = `repeat(${m}, 1fr)`;
		gameBoard.style.gridTemplateColumns = `repeat(${n}, 1fr)`;
	
		for (let i = 0; i < m * n; i++) {
			const tile = document.createElement('div');
			tile.className = 'tile';
			tile.addEventListener('click', () => {
				tileClicked(i);
			});
			gameBoard.appendChild(tile);
		}
	}

	createGrid(3, 4);  // Initial creation of the grid
});




function tileClicked(index) {
	console.log(`Tile ${index} clicked`);
	moves++;
	movesCounter.textContent = moves;
}

function restartGame() {
	moves = 0;
	movesCounter.textContent = moves;
	gameBoard.innerHTML = '';  // Clear existing tiles
	createGrid(3, 4);  // Recreate the grid
}

window.restartGame = restartGame;  // Expose function to global scope for the HTML button

function changeTheme(themeName) {
	gameBoard.className = 'game-board ' + themeName;
}

window.changeTheme = changeTheme;  // Expose function to global scope for the HTML button






&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
CSS

THIS WORKS just backwards:

.front img {
	max-width: 100%;
	max-height: 100%;
}

.tile.flipped {
	transform: rotateY(180deg);
}

/* .tile.flipped .back {
	transform: rotateY(180deg);
} */

.tile.flipped .back {
	background-image: url("assets/just-waves.png");
}

.tile.flipped .front {
	display: flex;
	justify-content: center;
	align-items: center;
	transform: rotateY(180deg);
}